package ru.nti.dtps.cimconverter.rdf

import ru.nti.dtps.cimconverter.rdf.resource.RdfResource
import ru.nti.dtps.cimconverter.rdf.schema.Namespace
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

object RdfBuilder {

    private val xmlProlog = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
    private val rootElementStartTag =
        "<rdf:RDF ${Namespace.getRdfRootElementNamespaceAttributes()} xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">"
    private val rootElementEndTag = "</rdf:RDF>"
    private val dtpsProductSign = createDtpsProductSign()

    fun build(resources: Collection<RdfResource>): String = RdfContent(
        xmlProlog,
        dtpsProductSign,
        rootElementStartTag,
        resources,
        rootElementEndTag
    ).stringify()

    private fun createDtpsProductSign(): String {
        val time = LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm:ss"))

        return "<!--  This file was generated by DTPS 0.7 (http://цдэс.рф) on $time  -->"
    }
}
